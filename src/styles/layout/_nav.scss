$nav-item-spacing: 0.5em;

/*
 * Default navigation styling, either for small viewports of static styles
 */
nav#app-nav {
  height: auto;
  min-height: 2.5em;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.2em 0.8em;
  font-size: $h3;
  background-color: $cb-black;
}

ul#app-nav-items {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
}

li.nav-item {
  /* Keep 'Log Out' and 'Logged In' text side-by-side and centred vertically */
  & > span {
    display: flex;
    align-items: center;
  }

  /* Push settings button to right side of navbar */
  &:last-of-type {
    margin-left: auto;
  }
}

a.nav-link, a#nav-settings-btn:not(.hide) {
  display: block;
  position: relative;
  margin: 0 $nav-item-spacing;
  color: $cb-white;
}

a.nav-link {
  /* Brighten and add glow behind text when link is active */
  &.link-active {
    cursor: default;
    color: #fff;
    text-shadow: 0px 0px 1px $cb-white;

    /*
     * User can return to 'Song Search' component from 'Song Display', so turn cursor to
     * a pointer to reflect that, despite this being an active link and with technically
     * no routing change occurring
     */
    &.displaying-song {
      cursor: pointer;
    }
  }

  /* Hide all nav items except the one with the currently active link */
  &:not(.link-active) {
    display: none;
  }
}

/*
 * Settings are always clickable (so keep pointer) but hide button when Dashboard
 * component is not currently open as that's the only place the settings are available;
 * this class is added or removed in components' ngOnInit lifecycle methods
 */
a#nav-settings-btn {
  cursor: pointer;

  &.hide {
    position: absolute;
    left: -9999px;
    top: -9999px;
  }
}

/*
 * Define user-info paragraph style but only display on viewports larger than 'medium'
 */
p#user-info {
  display: none;
  @include respond-to('medium') {
    display: block;
  }

  height: inherit;
  padding: 0.2em 0;
  font-size: $h4;
  text-align: center;
  color: lighten($color: $cb-gray, $amount: 15%);
  text-shadow: 0 0 1px $cb-gray;
  cursor: default;

  /*
   * Re-apply margin spacing between 'Log out' nav-item and this user info since it was
   * removed when margin-left:auto was applied to force item to the right
   */
  margin-left: ($nav-item-spacing * 2);

  small#email {
    color: lighten($color: $cb-gray, $amount: 5%);
    font-size: $h5;
  }
}

/*
 * Styles for only when navigation is opened via burger menu button
 * (only applicable when dropdown available, i.e. small viewports)
 */
@include respond-to('less-than-medium') {
  nav#app-nav.open {
    /* Ensure clickable nav items reach right edge of dropdown nav bar */
    padding-right: 0;

    /*
     * Display user login info, even if viewport is smaller than 'small', since an open
     * navbar allows for more space
     */
    p#user-info {
      display: block;
    }

    ul#app-nav-items {
      flex-direction: column;
    }

    li.nav-item {
      text-align: center;
      width: 100%;

      & > span {
        display: block;
      }
    }

    a.nav-link, a#nav-settings-btn:not(.hide) {
      display: block;
      /* Reset right margin to reach right edge of screen in menu; add top-down padding */
      padding: $nav-item-spacing 0;
      margin-right: 0;

      &:hover {
        color: #fff;
        background: darken($color: $cb-accent, $amount: 8%);
      }
    }

    /*
     * Change cursor to pointer despite link already being active (feels unintuitive
     * otherwise)
     */
    a.nav-link.link-active {
      cursor: pointer;
    }
  }
}


/*
 * Styles for only when viewport size is large & above:
 * add remainder of links to navbar and change events to animated underline effect
 */
@include respond-to('medium') {
  a.nav-link, a#nav-settings-btn {
    /* Un-hide all non-active links now that there's room in navbar */
    &:not(.link-active), &:not(.hide) {
      display: block;
    }

    /* Underline animation on hover */
    &:after {
      content: '';
      height: 2px;
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 0%;
      background: $cb-accent;
      transition: ease-out 0.15s;
    }

    /* Keep underline visible once animation completes on hover and when link is active */
    &:hover:after, &.link-active:after {
      width: 100%;
    }
  }
}
